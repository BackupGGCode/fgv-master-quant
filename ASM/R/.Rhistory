# retorno composto continuo
FGV.ccret = log(1 + FGV.rt)
graphHistogramRt <- paste0("test",testnumber,"_graphHistogramRt",".png");
png(filename = graphHistogramRt, width = 650, height = 450, units = "px");
hist(FGV.ccret,
col="lightblue",
xlab="retornos",
probability = TRUE,
ylab="densidade",
main="Histograma dos Log-retornos");
curve(dnorm(x, mean=mean(FGV.ccret), sd=sd(FGV.ccret)), add=TRUE, col="darkblue", lwd=2);
dev.off();
# grafico de log-retornos
graphRt <- paste0("test",testnumber,"_graphRt",".png");
png(filename = graphHistogramRt, width = 650, height = 450, units = "px");
plot(FGV.ccret,type='l',col="darkblue", main='Log-retornos', xlab="tempo",ylab="% retorno");
dev.off();
# grafico de log-retornos
graphRt <- paste0("test",testnumber,"_graphRt",".png");
png(filename = graphRt, width = 650, height = 450, units = "px");
plot(FGV.ccret,type='l',col="darkblue", main='Log-retornos', xlab="tempo",ylab="% retorno");
dev.off();
basicStats(FGV.ccret)
library(fBasics);
basicStats(FGV.ccret)
basicStats(FGV.ccret);
basicStats(FGV.PRICESVOLUMES);
basicStats(c(FGV.PRICESVOLUMES,FGV.ccret));
basicStats(cbind(FGV.PRICESVOLUMES,FGV.ccret));
basicStats(FGV.ccret);
basicStats(cbind(FGV.PRICESVOLUMES,FGV.ccret));
basicStats(FGV.ccret);
basicStats(FGV.PRICESVOLUMES);
basicStats(FGV.ccret)
cat (basicStats(FGV.PRICESVOLUMES));
print(basicStats(FGV.PRICESVOLUMES));
print(basicStats(FGV.ccret));
retornos<-FGV.ccret;
print(basicStats(retornos));
retornos<-FGV.ccret;
print("<table>");
print("<tr>");
print(basicStats(FGV.PRICESVOLUMES));
print("</tr>");
print("<tr>");
print(basicStats(retornos));
print("</tr>");
print("</table>");
print(basicStats(FGV.PRICESVOLUMES));
print("<table>");
print(<table>);
print('<table>');
echo "test"
cat?
d
cat
cat('test', se='\n')
cat('test')
cat('<table>');
output <- cat('<table>');
output
output <- paste0('<table>',
'<tr>',
basicStats(FGV.PRICESVOLUMES),
'</tr>',
'<tr>',
basicStats(retornos),
'</tr>',
'</table>');
output
output <- paste0('<table>',
'<tr>',
print(basicStats(FGV.PRICESVOLUMES)),
'</tr>',
'<tr>',
basicStats(retornos),
'</tr>',
'</table>');
output <- paste0('<table>',
'<tr>',
cat(basicStats(FGV.PRICESVOLUMES)),
'</tr>',
'<tr>',
basicStats(retornos),
'</tr>',
'</table>');
output <- paste0('<table>',
'<tr>',
cat(basicStats(FGV.PRICESVOLUMES), sep=''),
'</tr>',
'<tr>',
basicStats(retornos),
'</tr>',
'</table>');
output <- paste0('<table>',
'<tr>',
basicStats(FGV.PRICESVOLUMES),
'</tr>',
'<tr>',
basicStats(retornos),
'</tr>',
'</table>');
print(output);
png(filename = 'infos.png', width = 600, height = 400, units = "px");
basicStats(FGV.PRICESVOLUMES)
dev.off();
output <- paste0('<table>',
'<tr>',
'quadro 1',
'</tr>',
'<tr>',
'quadro 2',
'</tr>',
'</table>');
output
dev.off();
png(filename = graphHistogramRt, width = 600, height = 400, units = "px");
hist(FGV.ccret,
col="lightblue",
xlab="retornos",
probability = TRUE,
ylab="densidade",
main="Histograma dos Log-retornos");
curve(dnorm(x, mean=mean(FGV.ccret), sd=sd(FGV.ccret)), add=TRUE, col="darkblue", lwd=2);
dev.off();
testnumber <- commandArgs(TRUE);
imgDir <-"./";
library(RMySQL);
library(quantmod);
library(fBasics);
# connecting to DB ...
con <- dbConnect(MySQL(),user="quickfix", password="quickfix",dbname="quickfix", host="localhost");
on.exit(dbDisconnect(con));
FGV.PRICES.ROWDATA <- dbGetQuery(con, paste("SELECT time, price, volume FROM quickfix.prices"));
FGV.prices <- FGV.PRICES.ROWDATA[, "price", drop = FALSE];
rownames(FGV.prices) = FGV.PRICES.ROWDATA$time;
FGV.volumes <- FGV.PRICES.ROWDATA[, "volume", drop = FALSE];
rownames(FGV.volumes) = FGV.PRICES.ROWDATA$time;
FGV.PRICESVOLUMES <- cbind(FGV.prices, FGV.volumes);
FGV.PRICESVOLUMES <- as.xts(FGV.PRICESVOLUMES);
FGV.prices.rows = nrow(FGV.prices);
# retorno simples ...
FGV.rt = (FGV.prices[2:FGV.prices.rows, 1] - FGV.prices[1:(FGV.prices.rows - 1), 1])/FGV.prices[1:(FGV.prices.rows - 1), 1];
names(FGV.rt) = rownames(FGV.prices)[2:FGV.prices.rows] ;
#summary(FGV.rt)
# retorno composto continuo
FGV.ccret = log(1 + FGV.rt);
# grafico de preços e volumes de negociaçao
graphPriceVolume <- paste0(imgDir,"test",testnumber,"_graphPriceVolume",".png");
png(filename = graphPriceVolume, width = 1200, height = 500, units = "px");
chartSeries(FGV.PRICESVOLUMES,theme='white');
dev.off();
# grafico de log-retornos
graphRt <- paste0(imgDir,"test",testnumber,"_graphRt",".png");
png(filename = graphRt, width = 600, height = 400, units = "px");
plot(FGV.ccret,type='l',col="darkblue", main='Log-retornos', xlab="tempo",ylab="% retorno");
dev.off();
# grafico histograma de log-retornos
graphHistogramRt <- paste0(imgDir,"test",testnumber,"_graphHistogramRt",".png");
png(filename = graphHistogramRt, width = 600, height = 400, units = "px");
hist(FGV.ccret,
col="lightblue",
xlab="retornos",
probability = TRUE,
ylab="densidade",
main="Histograma dos Log-retornos");
curve(dnorm(x, mean=mean(FGV.ccret), sd=sd(FGV.ccret)), add=TRUE, col="darkblue", lwd=2);
dev.off();
#estatisticas
#basicStats(FGV.PRICESVOLUMES)
#retornos<-FGV.ccret;
#basicStats(retornos)
testnumber <- commandArgs(TRUE);
imgDir <-"./";
library(RMySQL);
library(quantmod);
library(fBasics);
# connecting to DB ...
con <- dbConnect(MySQL(),user="quickfix", password="quickfix",dbname="quickfix", host="localhost");
on.exit(dbDisconnect(con));
FGV.PRICES.ROWDATA <- dbGetQuery(con, paste("SELECT time, price, volume FROM quickfix.prices"));
FGV.prices <- FGV.PRICES.ROWDATA[, "price", drop = FALSE];
rownames(FGV.prices) = FGV.PRICES.ROWDATA$time;
FGV.volumes <- FGV.PRICES.ROWDATA[, "volume", drop = FALSE];
rownames(FGV.volumes) = FGV.PRICES.ROWDATA$time;
FGV.PRICESVOLUMES <- cbind(FGV.prices, FGV.volumes);
FGV.PRICESVOLUMES <- as.xts(FGV.PRICESVOLUMES);
FGV.prices.rows = nrow(FGV.prices);
# retorno simples ...
FGV.rt = (FGV.prices[2:FGV.prices.rows, 1] - FGV.prices[1:(FGV.prices.rows - 1), 1])/FGV.prices[1:(FGV.prices.rows - 1), 1];
names(FGV.rt) = rownames(FGV.prices)[2:FGV.prices.rows] ;
#summary(FGV.rt)
# retorno composto continuo
FGV.ccret = log(1 + FGV.rt);
# grafico de preços e volumes de negociaçao
graphPriceVolume <- paste0(imgDir,"test",testnumber,"_graphPriceVolume",".png");
png(filename = graphPriceVolume, width = 1200, height = 500, units = "px");
chartSeries(FGV.PRICESVOLUMES,theme='white');
#dev.off();
# grafico de log-retornos
graphRt <- paste0(imgDir,"test",testnumber,"_graphRt",".png");
png(filename = graphRt, width = 600, height = 400, units = "px");
plot(FGV.ccret,type='l',col="darkblue", main='Log-retornos', xlab="tempo",ylab="% retorno");
#dev.off();
# grafico histograma de log-retornos
graphHistogramRt <- paste0(imgDir,"test",testnumber,"_graphHistogramRt",".png");
png(filename = graphHistogramRt, width = 600, height = 400, units = "px");
hist(FGV.ccret,
col="lightblue",
xlab="retornos",
probability = TRUE,
ylab="densidade",
main="Histograma dos Log-retornos");
curve(dnorm(x, mean=mean(FGV.ccret), sd=sd(FGV.ccret)), add=TRUE, col="darkblue", lwd=2);
#dev.off();
#estatisticas
#basicStats(FGV.PRICESVOLUMES)
#retornos<-FGV.ccret;
#basicStats(retornos)
testnumber <- commandArgs(TRUE);
imgDir <-"./";
library(RMySQL);
library(quantmod);
library(fBasics);
# connecting to DB ...
con <- dbConnect(MySQL(),user="quickfix", password="quickfix",dbname="quickfix", host="localhost");
on.exit(dbDisconnect(con));
FGV.PRICES.ROWDATA <- dbGetQuery(con, paste("SELECT time, price, volume FROM quickfix.prices"));
FGV.prices <- FGV.PRICES.ROWDATA[, "price", drop = FALSE];
rownames(FGV.prices) = FGV.PRICES.ROWDATA$time;
FGV.volumes <- FGV.PRICES.ROWDATA[, "volume", drop = FALSE];
rownames(FGV.volumes) = FGV.PRICES.ROWDATA$time;
FGV.PRICESVOLUMES <- cbind(FGV.prices, FGV.volumes);
FGV.PRICESVOLUMES <- as.xts(FGV.PRICESVOLUMES);
FGV.prices.rows = nrow(FGV.prices);
# retorno simples ...
FGV.rt = (FGV.prices[2:FGV.prices.rows, 1] - FGV.prices[1:(FGV.prices.rows - 1), 1])/FGV.prices[1:(FGV.prices.rows - 1), 1];
names(FGV.rt) = rownames(FGV.prices)[2:FGV.prices.rows] ;
#summary(FGV.rt)
# retorno composto continuo
FGV.ccret = log(1 + FGV.rt);
# grafico de preços e volumes de negociaçao
graphPriceVolume <- paste0(imgDir,"test",testnumber,"_graphPriceVolume",".png");
png(filename = graphPriceVolume, width = 1200, height = 500, units = "px");
chartSeries(FGV.PRICESVOLUMES,theme='white');
#dev.off();
sink();
# grafico de log-retornos
graphRt <- paste0(imgDir,"test",testnumber,"_graphRt",".png");
png(filename = graphRt, width = 600, height = 400, units = "px");
plot(FGV.ccret,type='l',col="darkblue", main='Log-retornos', xlab="tempo",ylab="% retorno");
#dev.off();
sink();
# grafico histograma de log-retornos
graphHistogramRt <- paste0(imgDir,"test",testnumber,"_graphHistogramRt",".png");
png(filename = graphHistogramRt, width = 600, height = 400, units = "px");
hist(FGV.ccret,
col="lightblue",
xlab="retornos",
probability = TRUE,
ylab="densidade",
main="Histograma dos Log-retornos");
curve(dnorm(x, mean=mean(FGV.ccret), sd=sd(FGV.ccret)), add=TRUE, col="darkblue", lwd=2);
#dev.off();
sink();
#estatisticas
#basicStats(FGV.PRICESVOLUMES)
#retornos<-FGV.ccret;
#basicStats(retornos)
testnumber <- commandArgs(TRUE);
imgDir <-"./";
library(RMySQL);
library(quantmod);
library(fBasics);
# connecting to DB ...
con <- dbConnect(MySQL(),user="quickfix", password="quickfix",dbname="quickfix", host="localhost");
on.exit(dbDisconnect(con));
FGV.PRICES.ROWDATA <- dbGetQuery(con, paste("SELECT time, price, volume FROM quickfix.prices"));
FGV.prices <- FGV.PRICES.ROWDATA[, "price", drop = FALSE];
rownames(FGV.prices) = FGV.PRICES.ROWDATA$time;
FGV.volumes <- FGV.PRICES.ROWDATA[, "volume", drop = FALSE];
rownames(FGV.volumes) = FGV.PRICES.ROWDATA$time;
FGV.PRICESVOLUMES <- cbind(FGV.prices, FGV.volumes);
FGV.PRICESVOLUMES <- as.xts(FGV.PRICESVOLUMES);
FGV.prices.rows = nrow(FGV.prices);
# retorno simples ...
FGV.rt = (FGV.prices[2:FGV.prices.rows, 1] - FGV.prices[1:(FGV.prices.rows - 1), 1])/FGV.prices[1:(FGV.prices.rows - 1), 1];
names(FGV.rt) = rownames(FGV.prices)[2:FGV.prices.rows] ;
#summary(FGV.rt)
# retorno composto continuo
FGV.ccret = log(1 + FGV.rt);
# grafico de preços e volumes de negociaçao
graphPriceVolume <- paste0(imgDir,"test",testnumber,"_graphPriceVolume",".png");
png(filename = graphPriceVolume, width = 1200, height = 500, units = "px");
chartSeries(FGV.PRICESVOLUMES,theme='white');
garbage <- dev.off();
# grafico de log-retornos
graphRt <- paste0(imgDir,"test",testnumber,"_graphRt",".png");
png(filename = graphRt, width = 600, height = 400, units = "px");
plot(FGV.ccret,type='l',col="darkblue", main='Log-retornos', xlab="tempo",ylab="% retorno");
garbage <- dev.off();
# grafico histograma de log-retornos
graphHistogramRt <- paste0(imgDir,"test",testnumber,"_graphHistogramRt",".png");
png(filename = graphHistogramRt, width = 600, height = 400, units = "px");
hist(FGV.ccret,
col="lightblue",
xlab="retornos",
probability = TRUE,
ylab="densidade",
main="Histograma dos Log-retornos");
curve(dnorm(x, mean=mean(FGV.ccret), sd=sd(FGV.ccret)), add=TRUE, col="darkblue", lwd=2);
garbage <- dev.off();
#estatisticas
#basicStats(FGV.PRICESVOLUMES)
#retornos<-FGV.ccret;
#basicStats(retornos)
paste(output);
cat(output);
mean_return <- mean(FGV.ret);
std(FGV.ccret);
library(RMySQL);
library(quantmod);
library(fBasics);
# connecting to DB ...
con <- dbConnect(MySQL(),user="quickfix", password="quickfix",dbname="quickfix", host="localhost");
on.exit(dbDisconnect(con));
FGV.PRICES.ROWDATA <- dbGetQuery(con, paste("SELECT time, price, volume FROM quickfix.prices"));
FGV.prices <- FGV.PRICES.ROWDATA[, "price", drop = FALSE];
rownames(FGV.prices) = FGV.PRICES.ROWDATA$time;
FGV.volumes <- FGV.PRICES.ROWDATA[, "volume", drop = FALSE];
rownames(FGV.volumes) = FGV.PRICES.ROWDATA$time;
FGV.PRICESVOLUMES <- cbind(FGV.prices, FGV.volumes);
FGV.PRICESVOLUMES <- as.xts(FGV.PRICESVOLUMES);
FGV.prices.rows = nrow(FGV.prices);
# retorno simples ...
FGV.rt = (FGV.prices[2:FGV.prices.rows, 1] - FGV.prices[1:(FGV.prices.rows - 1), 1])/FGV.prices[1:(FGV.prices.rows - 1), 1];
names(FGV.rt) = rownames(FGV.prices)[2:FGV.prices.rows] ;
#summary(FGV.rt)
# retorno composto continuo
FGV.ccret = log(1 + FGV.rt);
mean_return <- mean(FGV.ccret);
mean(FGV.ccret);
std(FGV.ccret);
skewness_return <- skewness(FGV.ccret);
library(fBasics)
std_return <- std(FGV.ccret);
skewness_return <- skewness(FGV.ccret);
skewness(FGV.ccret);
skewness_return
cat(skewness_return)
mean_return <- cat(mean(FGV.ccret));
output <- paste0('<table>',
'<tr>',
mean_return,
'</tr>',
'<tr>',
skewness_return,
'</tr>',
'</table>');
cat(output);
mean_return <- cat(mean(FGV.ccret));
skewness_return <- cat(skewness(FGV.ccret));
kurtosis_return <- kurtosis(FGV.ret);
output <- paste0('<table>',
'<tr>',
mean_return,
'</tr>',
'<tr>',
skewness_return,
'</tr>',
'</table>');
cat(output);
mean_return <- cat(mean(FGV.ccret));
skewness_return <- cat(skewness(FGV.ccret));
kurtosis_return <- kurtosis(FGV.ccret);
output <- paste0('<table>',
'<tr>',
mean_return,
'</tr>',
'<tr>',
skewness_return,
'</tr>',
'</table>');
cat(output);
mean_return <- cat(mean(FGV.ccret));
skewness_return <- cat(skewness(FGV.ccret));
kurtosis_return <- kurtosis(FGV.ccret);
output <- paste('<table>',
'<tr>',
mean_return,
'</tr>',
'<tr>',
skewness_return,
'</tr>',
'</table>');
cat(output);
mean_return <- cat(mean(FGV.ccret));
skewness_return <- cat(skewness(FGV.ccret));
kurtosis_return <- kurtosis(FGV.ccret);
output <- paste('<table>',
'<tr>',
cat(mean_return),
'</tr>',
'<tr>',
skewness_return,
'</tr>',
'</table>');
cat(output);
mean_return <- cat(mean(FGV.ccret));
skewness_return <- cat(skewness(FGV.ccret));
kurtosis_return <- kurtosis(FGV.ccret);
output <- paste("<table>",
"<tr>",
cat(mean_return),
"</tr>",
"<tr>",
skewness_return,
"</tr>",
"</table>");
cat(output);
output <- paste("<table>",
"<tr>",
cat(mean_return),
"</tr>",
"<tr>",
print(skewness_return),
"</tr>",
"</table>");
cat(output);
paste("Today is", date())
paste("Today is", date()," de merda")
paste("<table>",
"<tr>",
cat(mean_return),
"</tr>",
"<tr>",
print(skewness_return),
"</tr>",
"</table>");
paste("merda de mean=",mean_return )
mean_return <- cat(mean(FGV.ccret));
paste("merda de mean=",mean_return )
mean_return <- mean(FGV.ccret);
paste("merda de mean=",mean_return )
mean_return <- mean(FGV.ccret);
skewness_return <- skewness(FGV.ccret);
kurtosis_return <- kurtosis(FGV.ccret);
output <- paste("<table>",
"<tr>",
mean_return,
"</tr>",
"<tr>",
skewness_return,
"</tr>",
"</table>");
cat(output);
sd_return <- sd(FGV.ccret);
sprintf("%.2f", sd_return)
output <- paste("<table width='500'>",
"<tr><td>",
"<b> Preços </b><br>",
"mean: "     ,sprintf("%.2f",sd_return),"<br>",
"Std Dev: " ,mean_return,"<br>",
"kurtosis: " ,kurtosis_return,"<br>",
"skewness: " ,skewness_return,"<br>",
"</td>",
"<td>",
"<b> Log-Retorno</b><br>",
"Mean: "     ,sd_return,"<br>",
"Std Dev: " ,mean_return,"<br>",
"Kurtosis: " ,kurtosis_return,"<br>",
"Skewness: " ,skewness_return,"<br>",
"</td></tr>",
"</table>");
cat(output);
output <- paste("<table width='500'>",
"<tr><td>",
"<b> Preços </b><br>",
"mean: "     ,sprintf("%.2f",sd_return),"<br>",
"Std Dev: " ,sprintf("%.2f",mean_return),"<br>",
"kurtosis: " ,sprintf("%.2f",kurtosis_return),"<br>",
"skewness: " ,sprintf("%.2f",skewness_return,"<br>",
"</td>",
"<td>",
"<b> Log-Retorno</b><br>",
"Mean: "     ,sprintf("%.2f",sd_return),"<br>",
"Std Dev: " ,sprintf("%.2f",mean_return),"<br>",
"Kurtosis: " ,sprintf("%.2f",kurtosis_return),"<br>",
"Skewness: " ,sprintf("%.2f",skewness_return),"<br>",
"</td></tr>",
"</table>");
mean_price <- mean(FGV.PRICESVOLUMES);
mean_price
mean_price <- mean(FGV.prices);
FGV.prices
FGV.prices[,2]
FGV.prices[,1]
FGV.PRICESVOLUMES[,1]
FGV.PRICESVOLUMES[,2]
mean_price <- mean(FGV.PRICESVOLUMES[,1]);
mean_price
FGV.PRICESVOLUMES[,1]
FGV.PRICESVOLUMES[,1]FGV.PRICESVOLUMES[,1]
FGV.PRICESVOLUMES[,1]
FGV.PRICESVOLUMES[,2]
acf(FGV.ccret,lag=15)
acf(FGV.ccret[,1],lag=15)
FGV.ccret[,1]
FGV.ccret[,2]
FGV.ccret
acf(FGV.ccret[,1],lag=5)
acf(FGV.ccret,lag=5)
